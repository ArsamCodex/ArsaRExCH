@inject ArsaRExCH.Interface.UserIpInterface _user
@using ArsaRExCH.Model
@using ArsaRExCH.DTOs
@using ArsaRExCH.Components.Pages
@using ArsaRExCH.Components.MyComponents
@rendermode InteractiveServer
@if (isLoading)
{
    <p>Loading...</p>
}
else
{
    <div class="table-container">
        <center> <b><p>Most Inzet By Users</p></b></center>
        <table class="table">
            

            <thead>
                <tr>
                    <th>Date</th>
                    <th>BTC Price</th>
                    <th>Total Inzet</th>
                    <th>ETH Price</th>
                    <th>Total Inzet</th>
                </tr>
            </thead>
            <tbody>
                @if (results != null && results.Any())
                {
                    foreach (var result in results)
                    {
                        <tr>
                            <td>@result.MyDateTime.ToString("dd/MM/yyyy")</td>
                            <td>@((result.HitBtcPrice != 0) ? result.HitBtcPrice.ToString() : "N/A")</td>
                            <td>@((result.MaxBtcTotalInBTC != 0) ? result.MaxBtcTotalInBTC.ToString() : "N/A")</td>
                            <td>@((result.HitEthPrice != 0) ? result.HitEthPrice.ToString() : "N/A")</td>
                            <td>@((result.MaxEthTotal != 0) ? result.MaxEthTotal.ToString("F4") : "N/A")</td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="5">No results available.</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

<style>
    .table-container {
        width: 50%; /* Set to half of the screen width */
        margin-left: auto; /* Align to the right side */
        margin-right: 0; /* No right margin */
        overflow-x: auto; /* Allow horizontal scrolling if needed */
    }

    .table {
        width: 100%; /* Take full width of the container */
        border-collapse: collapse; /* Merge table borders */
    }

    th, td {
        padding: 8px; /* Adjust padding as needed */
        text-align: left;
        border: 1px solid #ddd; /* Border for cells */
        white-space: nowrap; /* Prevent text from wrapping */
    }

    th {
        background-color: #f1f1f1; /* Header background color */
        font-weight: bold; /* Bold text in header */
    }

    tr:nth-child(even) td {
        background-color: #f9f9f9; /* Zebra striping for even rows */
    }
</style>




@code {
    private List<MaxInzetResultDTO> results = new List<MaxInzetResultDTO>();
    private bool isLoading = false;

    protected override async Task OnInitializedAsync()
    {
       
        Console.WriteLine("OnInitializedAsync called"); //  debugging

            results = await _user.CalculateMaxInzetAsync(); // Fetch all results

    }
}
