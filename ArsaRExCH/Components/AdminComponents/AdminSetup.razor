@code {
    private string adminUsername;
    private string adminPassword;
    private string adminEmail;
    private bool isProcessing = false;
    private string errorMessage = string.Empty;

    private async Task CompleteSetup()
    {
        if (string.IsNullOrWhiteSpace(adminUsername) || string.IsNullOrWhiteSpace(adminPassword) || string.IsNullOrWhiteSpace(adminEmail))
        {
            errorMessage = "All fields are required.";
            return;
        }

        isProcessing = true;
        errorMessage = string.Empty;

        try
        {
            // Logic to create the admin user in the database
            // For example: await AdminService.CreateAdminAsync(adminUsername, adminPassword, adminEmail);
            // Set IsAdminSetupComplete to true in the database

            // Close the pop-up after successful setup
            await OnSetupComplete.InvokeAsync(true);
        }
        catch (Exception ex)
        {
            // Handle errors (e.g., display a message to the user)
            errorMessage = $"Setup failed: {ex.Message}";
        }
        finally
        {
            isProcessing = false;
        }
    }

    [Parameter] public EventCallback<bool> OnSetupComplete { get; set; }
}

<!-- Popup Content -->
<div class="modal">
    <div class="modal-content">
        <h2>Admin Setup</h2>
        <p>Please provide the admin account details.</p>

        <input @bind="adminUsername" placeholder="Admin Username" aria-label="Admin Username" />
        <br />
        <input type="password" @bind="adminPassword" placeholder="Password" aria-label="Password" />
        <br />
        <input @bind="adminEmail" placeholder="Email" type="email" aria-label="Email" />
        <br />

        <button @onclick="CompleteSetup" disabled="@isProcessing">
            @if (isProcessing)
            {
                <span>Setting up...</span>
            }
            else
            {
                <span>Complete Setup</span>
            }
        </button>

        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <p style="color:red;">@errorMessage</p>
        }
    </div>
</div>
