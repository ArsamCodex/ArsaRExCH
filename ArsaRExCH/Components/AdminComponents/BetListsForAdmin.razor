@page "/BetListAdmin"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using System.Security.Claims
@using ArsaRExCH.Data
@using ArsaRExCH.Model
@rendermode InteractiveServer
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider _AuthenticationStateProvider
@inject ArsaRExCH.Interface.AdministrationInterface _adminInterface
@inject ArsaRExCH.Interface.BetInterface _betInterface
@using ArsaRExCH.Components.AdminComponents

@if(isAdmin){
<div class="bet-container">
    <div class="table-header">
        <div class="table-cell"><strong>Bet ID</strong></div>
        <div class="table-cell"><strong>User ID</strong></div>
        <div class="table-cell"><strong>BTC Expire</strong></div>
        <div class="table-cell"><strong>ETH Expire</strong></div>
        <div class="table-cell"><strong>Btc AMoubt</strong></div>
        <div class="table-cell"><strong>ETH Amount</strong></div>
        <div class="table-cell"><strong>Details</strong></div>
    </div>

    @if (bets != null && bets.Any())
    {
        @foreach (var bet in bets)
        {
            <div class="table-row">
                <div class="table-cell">@bet.BetId</div>
                <div class="table-cell">@bet.UserIdSec</div>
                <div class="table-cell">@bet.BtcPriceExpireBet</div>
                <div class="table-cell">@bet.EthPriceExpireBet</div>
                <div class="table-cell">@bet.BetAmountBtc</div>
                <div class="table-cell">@bet.BetAmountETH</div>
                <div class="table-cell">
                    <td>
                        <button class="btn btn-danger" @onclick="() => NavigateToBetDetails(bet.BetSignutare)">Details</button>
                    </td>



                </div>
            </div>
        }
    }
    else
    {
        <p>No bets available.</p>
    }
    </div>
}
else
{
    <p>Administration Adin </p>
}
<style>
    .bet-container {
        width: 100%;
        margin-top: 20px;
        display: flex;
        flex-direction: column;
    }

    /* Table header styles */
    .table-header {
        display: flex;
        background-color: #f1f1f1;
        padding: 10px;
        font-weight: bold;
        border-bottom: 2px solid #ccc;
        text-align: left;
    }

    /* Table row styles */
    .table-row {
        display: flex;
        padding: 10px;
        border-bottom: 1px solid #eaeaea;
    }

    /* Cell styles for both header and rows */
    .table-cell {
        flex: 1 1 150px; /* Make cells flexible but set a minimum width */
        padding: 8px 15px;
        text-align: left;
        border-right: 1px solid #eaeaea;
    }

        .table-cell:last-child {
            border-right: none;
        }

    .table-row:nth-child(even) {
        background-color: #f9f9f9;
    }

    /* Ensure all cells have the same width */
    .table-header .table-cell, .table-row .table-cell {
        min-width: 150px; /* Consistent minimum width */
    }

    p {
        padding: 15px;
        text-align: center;
        color: #555;
    }
</style>

@code {
    public List<Bet> bets = new List<Bet>();
    public string user2 { get; set; }
    private string currentUserRole;
    private bool isAdmin;

    protected override async Task OnInitializedAsync()
    {
        var authState = await _AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity?.IsAuthenticated ?? false)
        {
            user2 = user.FindFirst(u => u.Type.Contains("nameidentifier"))?.Value;
            var roles = await _adminInterface.GetUserRolesAsync(user);
            // var roles = user.FindAll(ClaimTypes.Role).Select(c => c.Value).ToList();
            isAdmin = roles.Contains("Admin");
            currentUserRole = roles.FirstOrDefault();
            user2 = user.FindFirst(u => u.Type.Contains("nameidentifier"))?.Value;
            bets = await _betInterface.GetListOfAllBets();
        }
    }
    private void NavigateToBetDetails(string betSignutare)
    {
        NavigationManager.NavigateTo($"BetPreviewAdmin/{betSignutare}");
    }


}