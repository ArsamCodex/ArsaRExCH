@page "/"
@using ArsaRExCH.Data
@using ArsaRExCH.Model
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components
@inject NavigationManager NavigationManager
@inject IHttpContextAccessor HttpContextAccessor
@using System.Net
@using System.Net.Sockets
@using System.Diagnostics
@using System.Text.RegularExpressions
@using Microsoft.EntityFrameworkCore
@inject ArsaRExCH.Interface.BetInterface _face
@inject ArsaRExCH.Interface.UserIpInterface _faceUser
@inject ApplicationDbContext _context
<style>
    .win-container {
        border: 2px solid #000;
        padding: 2px;
        border-radius: 5px;
        display: inline-block;
        width:100%;
    }
</style>
<ArsaRExCH.Components.MyComponents.LiveChatSample></ArsaRExCH.Components.MyComponents.LiveChatSample>
<center><div class="win-container">
   <ArsaRExCH.Components.MyComponents.Win></ArsaRExCH.Components.MyComponents.Win>
   <hr />


    </div>
</center>

<ArsaRExCH.Components.MyComponents.MostInzetByUsers></ArsaRExCH.Components.MyComponents.MostInzetByUsers>


@if (!string.IsNullOrEmpty(BanMessage))
{
    <div class="alert alert-danger">@BanMessage</div>
}

@code {
    public string ipadress { get; set; }        
    public string ipadressII { get; set; }
    public string BanMessage { get; set; }

    protected override async Task OnInitializedAsync()
    {
        ipadress = await _face.GetClientIpAddress();
        ipadressII = await _faceUser.GetPublicIpAddress();

        Console.WriteLine($"Client IP Address: {ipadress}");
        Console.WriteLine($"Public IP Address: {ipadressII}");

      //  BanMessage = await _faceUser.CheckIfIpIsBanned(ipadressII); // Capture return value
        Console.WriteLine($"Ban Message: {BanMessage}"); // Debug output
    }
}
