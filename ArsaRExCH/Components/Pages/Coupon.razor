@page "/Coupon"
@using ArsaRExCH.Components.Account
@using ArsaRExCH.DTOs
@using ArsaRExCH.Interface
@rendermode InteractiveServer
@inject IHttpContextAccessor HttpContextAccessor
@inject IdentityUserAccessor UserAccessor
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@using ArsaRExCH.Data
@using ArsaRExCH.Model
@inject IDbContextFactory<ApplicationDbContext> dbContextFactory
@inject NavigationManager _manager
@inject UserManager<ApplicationUser> UserManager
@attribute [Authorize]
<!--role admin -->


<h5 class="text-primary mb-4">Issue Coupon</h5>
<div class="d-flex" style="gap: 2%;">

    <!-- First Div -->
    <div style="width: 48%; margin-left: 0;">
        <EditForm EditContext="editContext" OnValidSubmit="MakeCouponButton">
            <DataAnnotationsValidator />
            <ValidationSummary class="alert alert-danger" />

            <div class="form-group mb-3">
                <label for="dateIssued" class="form-label">Date Issued</label>
                <InputDate id="dateIssued" class="form-control" @bind-Value="coupon.DateIssued" />
            </div>

            <div class="form-group mb-3">
                <label for="details" class="form-label">Details</label>
                <InputTextArea id="details" class="form-control" @bind-Value="coupon.Details" placeholder="Enter coupon details" rows="4" maxlength="500" style="resize: none;"></InputTextArea>
                <small class="form-text text-muted">Limit: 500 characters</small>

            </div>

            <div class="form-group mb-3">
                <label for="receiver" class="form-label">Receiver</label>
                <InputText id="receiver" class="form-control" @bind-Value="coupon.Receiver" placeholder="Receiver name" />
            </div>

            <div class="form-group mb-3">
                <label for="amount" class="form-label">Amount</label>
                <InputNumber id="amount" class="form-control" @bind-Value="coupon.Amount" placeholder="Enter amount" />
            </div>

            <div class="form-group mb-3">
                <label for="expirationDate" class="form-label">Expiration Date</label>
                <InputDate id="expirationDate" class="form-control" @bind-Value="coupon.ExpirationDate" />
            </div>

            <div class="d-flex gap-3 align-items-center mb-3">
                <div class="form-check">
                    <InputCheckbox id="isUsed" class="form-check-input" @bind-Value="coupon.IsUsed" />
                    <label for="isUsed" class="form-check-label">Is Used</label>
                </div>
                <div class="form-check">
                    <InputCheckbox id="isExpired" class="form-check-input" @bind-Value="coupon.IsExpired" />
                    <label for="isExpired" class="form-check-label">Is Expired</label>
                </div>
            </div>

            <button type="submit" class="btn btn-primary w-100">Save Coupon</button>
        </EditForm>
    </div>

    <!-- Second Div -->
    <div style="width: 48%; margin-left: 0; border: 2px groove red;">
        <h5 class="text-primary">Additional Information</h5>
        <p>Helper tool admin user finder</p>
        <p></p>
    </div>

</div>


@code {
    private EditContext editContext;
    private ArsaRExCH.Model.Coupon coupon = new ArsaRExCH.Model.Coupon();
    private string user2 { get; set; }
    public string? ErrorMessage { get; set; }
    public string CurrentUserRoles { get; set; }




    protected override async Task OnInitializedAsync()
    {
        editContext = new EditContext(coupon);
        //  editContext.OnFieldChanged += HandleFieldChanged;
        // Fetch initial data
        var context = HttpContextAccessor.HttpContext;
        if (context != null)
        {
            var user5 = await UserAccessor.GetRequiredUserAsync(context);
            if (user5 != null)
            {


                user2 = user5.Id;
                var roles = await UserManager.GetRolesAsync(user5);
                CurrentUserRoles = roles.FirstOrDefault();
                coupon.DateIssued = DateTime.Now;
            }

        }

    }
    private async Task MakeCouponButton()
    {

    }
}
