@page "/Bet1"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@inject NavigationManager NavigationManager
@using System.Security.Claims
@inject AuthenticationStateProvider _AuthenticationStateProvider
@inject HttpClient Http
@attribute [Authorize]
@rendermode InteractiveServer
@inject ArsaRExCH.Interface.BetInterface _interface
@using ArsaRExCH.Model


<div style="background-color:yellow;width:100%;height:100px">Bitcoin Price - Ethererum Price components</div>
<br />

<hr />
<br />
<EditForm Model="BetModel" OnValidSubmit="HandleValidSubmit" FormName="Name">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-container" style="display: inline-flex; flex-wrap: wrap; gap: 10px; align-items: center; border: dashed 1px black;width:auto">
        <div class="form-group" style="width: auto;">
            <label for="btcPriceExpireBet">BTC Price Expire Bet</label>
            <InputNumber @bind-Value="BetModel.BtcPriceExpireBet" id="btcPriceExpireBet" class="form-control form-control-sm" />
        </div>

        <div class="form-group" style="width: auto;">
            <label for="hitDateBTC">Hit Date BTC</label>
            <InputDate @bind-Value="BetModel.HitDateBTC" id="hitDateBTC" class="form-control form-control-sm" />
        </div>

        <div class="form-group" style="width: auto">
            <label for="betAmountBtc">Bet Amount BTC</label>
            <InputNumber @bind-Value="BetModel.BetAmountBtc" id="betAmountBtc" class="form-control form-control-sm" />
        </div>
    </div>

    <br />
    <br />

    <div class="form-container" style="display: inline-flex; flex-wrap: wrap; gap: 10px; align-items: center; border: dashed 1px black;width:auto">
        <div class="form-group" style="width:auto;">
            <label for="ethPriceExpireBet">ETH Price Expire Bet</label>
            <InputNumber @bind-Value="BetModel.EthPriceExpireBet" id="ethPriceExpireBet" class="form-control form-control-sm" />
        </div>

        <div class="form-group" style="width: auto;">
            <label for="hitDateETH">Hit Date ETH</label>
            <InputDate @bind-Value="BetModel.HitDateETH" id="hitDateETH" class="form-control form-control-sm" />
        </div>
        <div class="form-group" style="width: auto;">
            <label for="betAmountETH">Bet Amount ETH</label>
            <InputNumber @bind-Value="BetModel.BetAmountETH" id="betAmountETH" class="form-control form-control-sm" />
        </div>
    </div>
    <br /><br />
    <button type="submit" class="btn btn-primary btn-sm">Place Bet</button>


</EditForm>
@user2
@code {
    private Bet BetModel = new Bet();
    private string user2 { get; set; }
    protected override async Task OnInitializedAsync()
    {
        // Check if the user is logged in and fetch their information
        var authState = await _AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        if (user.Identity?.IsAuthenticated ?? false)
        {
            user2 = user.FindFirst(u => u.Type.Contains("nameidentifier"))?.Value;
        }

    }
    public async Task HandleValidSubmit()
    {
        //BetModel.CompletedTime = something when bet expires is null for begin
        // await Http.PostAsJsonAsync<Bet>($"/Bet/GetBet", BetModel3);
        BetModel.IsBetActive = true;
        BetModel.ISDeleted = false;
        BetModel.UserIdSec = user2;
        await _interface.SaveBet(BetModel);
    }
}

